CREATE TABLE PROJECT (
    project_id SERIAL PRIMARY KEY,
    project_name VARCHAR(100) NOT NULL,
    project_description TEXT,
    project_status VARCHAR(50) CHECK (project_status IN ('Pending', 'In Progress', 'Completed'))
);


INSERT INTO PROJECT (project_name, project_description, project_status) 
VALUES 
('Expense Tracker', 'A web-based tool to manage daily expenses', 'Completed'),
('E-commerce App', 'An online shopping platform', 'In Progress'),
('Chat Application', 'A real-time chat application', 'Pending');



import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.*;

public class ProjectTableSwing {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new ProjectTableSwing().createAndShowGUI());
    }

    private void createAndShowGUI() {
        JFrame frame = new JFrame("Project Details");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 400);
        
        // Column Names
        String[] columnNames = {"Project ID", "Project Name", "Description", "Status"};
        
        // Table Model
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);
        
        frame.add(scrollPane, BorderLayout.CENTER);
        
        loadProjectData(model); // Load data from PostgreSQL
        
        frame.setVisible(true);
    }

    private void loadProjectData(DefaultTableModel model) {
        String url = "jdbc:postgresql://localhost:5432/your_database";
        String user = "your_username";
        String password = "your_password";

        String query = "SELECT * FROM PROJECT";

        try (Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                int id = rs.getInt("project_id");
                String name = rs.getString("project_name");
                String description = rs.getString("project_description");
                String status = rs.getString("project_status");

                model.addRow(new Object[]{id, name, description, status});
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error fetching data: " + e.getMessage());
        }
    }
}

